The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Import an matrix_divided from 2-matrix_divided
>>> from 2-matrix_divided import matrix_divided

Using None as an empty list:
    >>> matrix_divided(None, 4)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Using a one argument:
    >>> matrix = [[7, 1, 4], [45, 9, 3]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Using a matrix and number that divides all element of the matrix:
    >>> matrix = [[89, 90, 7], [2, 20, 56]]
    >>> matrix_divided(matrix, 8)
    [[11.12, 11.25, 0.88], [0.25, 2.5, 7.0]]

Using a string as matrix:
    >>> matrix = "string"
    >>> matrix_divided(matrix, 100)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Using a list of mixed list and non-list items:
    >>> matrix = [[1, 2, 3], "Hello"]
    >>> matrix_divided(matrix, 500)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
Using the div as non-number:
    >>> matrix = [[90, 70, 23], [87, 8, 4]]
    >>> matrix_divided(matrix, "python")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
    
Using a list contains element more than another list of the matrix:
    >>> matrix = [[15, 34, 33], [4, 5, 6, 7]]
    >>> matrix_divided(matrix, 7)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
